name: build Docker

on:
  workflow_dispatch:
  push:
    branches:
      - master


jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Docker Image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'master'

      - name: Get version
        id: release_version
        run: |
          app_version=$(grep "APP_VERSION" version.txt | sed -ne "s/.*= '\(v[0-9]*\.[0-9]*\.[0-9]*\)'.*/\1/p")
          echo "app_version=$app_version" >> $GITHUB_ENV


      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies @angular/cli
        run: npm install -g @angular/cli

      - name: Build Frontend
        run: |
          npm install
          npm run build
          rm -rf /backend/front
          cp -r dist/navnetic-angular/browser /backend/front

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.1'

      - name: Build for amd64
        run: |
          cd backend
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a --trimpath -ldflags="-X 'backend/internal/config.Version=${{ env.app_version }}' -X 'backend/internal/config.BuildDate=$(date)'" -o dist/linux/amd64/Navnetic .

      - name: 检查后端构建后文件
        run: |
          ls -al backend/dist/linux/amd64/Navnetic

      - name: Build for arm64
        run: |
          cd backend
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a --trimpath -ldflags="-X 'backend/internal/config.Version=${{ env.app_version }}' -X 'backend/internal/config.BuildDate=$(date)'" -o dist/linux/arm64/Navnetic .

      - name: 检查构建后文件后端文件是否齐全
        run: |
          ls -al ./backend/dist/linux/amd64
          ls -al ./backend/dist/linux/arm64


      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login DockerHub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/navnetic-angular:latest
            ${{ secrets.DOCKER_USERNAME }}/navnetic-angular:${{ env.app_version }}
          push: true

